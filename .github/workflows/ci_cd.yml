name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Detect frontend changes
        id: changes
        uses: dorny/paths-filter@v2
        with:
          filters: |
            frontend:
              - 'frontend/**'
              - 'package.json'
              - 'vite.config.js'

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Run pylint
        run: pylint --rcfile=.pylintrc $(git ls-files '*.py') || true

      - name: Set up Node
        if: steps.changes.outputs.frontend == 'true'
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install frontend dependencies
        if: steps.changes.outputs.frontend == 'true'
        run: npm ci

      - name: Run frontend tests
        if: steps.changes.outputs.frontend == 'true'
        run: npm test

      - name: Build frontend
        if: steps.changes.outputs.frontend == 'true'
        run: npm run build

      - name: Run tests with coverage
        run: |
          coverage run -m pytest -vv
          coverage xml

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
