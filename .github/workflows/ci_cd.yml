name: CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build_and_test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11']
    steps:
      - name: Check out code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt -r requirements-dev.txt

      - name: Run pylint
        run: pylint --rcfile=.pylintrc $(git ls-files '*.py') || true

      - name: Run tests with coverage
        run: |
          coverage run -m pytest -vv
          coverage xml

      - name: Compute coverage percentage
        id: coverage
        run: |
          coverage json -o coverage.json
          python - <<'EOF' > coverage_percent.txt
import json
with open('coverage.json') as f:
    print(json.load(f)['totals']['percent_covered'])
EOF
          echo "percent=$(cat coverage_percent.txt)" >> "$GITHUB_OUTPUT"

      - name: Get main branch coverage
        id: maincov
        run: |
          curl -s https://codecov.io/gh/KristopherKubicki/norman/branch/main/graph/badge.svg -o main_coverage_badge.svg
          MAIN=$(grep -oE '[0-9]+\.?[0-9]*%' main_coverage_badge.svg | tr -d '%')
          echo "percent=$MAIN" >> "$GITHUB_OUTPUT"

      - name: Check coverage threshold
        run: |
          THRESHOLD=80
          CURRENT=${{ steps.coverage.outputs.percent }}
          MAIN=${{ steps.maincov.outputs.percent }}
          echo "Current coverage: $CURRENT%"
          echo "Main branch coverage: $MAIN%"
          if (( $(echo "$CURRENT < $THRESHOLD" | bc -l) )) || (( $(echo "$CURRENT < $MAIN" | bc -l) )); then
            echo "Coverage dropped below threshold or main branch value"
            exit 1
          fi

      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          files: coverage.xml
          fail_ci_if_error: true
          token: ${{ secrets.CODECOV_TOKEN }}
